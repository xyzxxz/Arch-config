(undo-tree-save-format-version . 1)
"8e13e8f5710447ce574cb60186e9e7848c41f5e7"
[nil nil nil nil (26416 15614 282438 427000) 0 nil]
([nil nil ((201 . 205) (200 . 202) (199 . 201) (194 . 200) (187 . 194) (#("W" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -187) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 188 (183 . 188) (#(")" 0 1 (fontified nil)) . -182) (182 . 183) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -182) (182 . 183) (178 . 183) (170 . 178) (#("Over" 0 4 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:variable) fontified t)) . -170) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 174 (164 . 174) (163 . 165) (152 . 160) (#("hy" 0 2 (face tree-sitter-hl-face:string fontified t)) . -152) (undo-tree-id4 . -2) (undo-tree-id5 . -2) 154 (152 . 154) (151 . 153) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -151) (151 . 152) (150 . 152) (144 . 150) (#("imp" 0 3 (face tree-sitter-hl-face:property fontified t)) . -144) (undo-tree-id6 . -3) (undo-tree-id7 . -3) 147 (143 . 147) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -143) (undo-tree-id8 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 144) (139 . 145) (#("
" 0 1 (fontified t)) . -139) (undo-tree-id9 . -1) 140 (139 . 140) (131 . 139) (#("a" 0 1 (fontified t)) . -131) (undo-tree-id10 . -1) (#("i" 0 1 (fontified t)) . -132) (undo-tree-id11 . -1) (#("t" 0 1 (fontified t)) . -133) (undo-tree-id12 . -1) 134 (131 . 134) (#("w" 0 1 (fontified t)) . -131) (undo-tree-id13 . -1) (#("a" 0 1 (fontified t)) . -132) (undo-tree-id14 . -1) (#("w" 0 1 (fontified t)) . -133) (undo-tree-id15 . -1) (#("i" 0 1 (fontified t)) . -134) (undo-tree-id16 . -1) (#("t" 0 1 (fontified t)) . -135) (undo-tree-id17 . -1) 136 (132 . 136) (131 . 132) (#("w" 0 1 (fontified t)) . -131) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("
" 0 1 (fontified t)) . -132) (undo-tree-id20 . -1) 133 (132 . 133) (115 . 132) (#("s" 0 1 (fontified t)) . -115) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("n" 0 1 (fontified t)) . -116) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t)) . -117) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -118) (undo-tree-id25 . -1) 119 (113 . 119) (111 . 113) (183 . 189) (#("ce" 0 2 (face tree-sitter-hl-face:string fontified t)) . -183) (undo-tree-id26 . -2) (undo-tree-id27 . -2) 185 (183 . 185) (182 . 184) (#("\"" 0 1 (fontified nil)) . -182) (180 . 183) (174 . 180) (#("layou" 0 5 (face tree-sitter-hl-face:property.definition fontified t)) . -174) (undo-tree-id28 . -2) (undo-tree-id29 . -5) (undo-tree-id30 . -5) 179 (176 . 179) (#("y" 0 1 (face tree-sitter-hl-face:property fontified t)) . -179) (undo-tree-id31 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -180) (undo-tree-id32 . -1) 181 (179 . 181) (#("o" 0 1 (face tree-sitter-hl-face:property.definition fontified t)) . -176) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 177 (176 . 177) (174 . 176) (169 . 174) (168 . 169) (159 . 167) (#("over" 0 4 (face tree-sitter-hl-face:string fontified t)) . -159) (undo-tree-id35 . -4) (undo-tree-id36 . -4) 163 (159 . 163) (158 . 160) (#("\"" 0 1 (fontified nil)) . -158) (152 . 159) (148 . 152) (147 . 149) (146 . 148) (145 . 147) (134 . 145) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -134) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 135 (130 . 135) (#(")" 0 1 (fontified nil)) . -129) (129 . 130) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -129) (129 . 130) (127 . 130) (120 . 127) (#("def" 0 3 (fontified t)) . -120) (undo-tree-id39 . -3) (undo-tree-id40 . -3) 123 (113 . 123) (#("
" 0 1 (fontified t)) . -113) (undo-tree-id41 . -1) 114 (112 . 114) (111 . 112) (104 . 110) (100 . 104) (#("li" 0 2 (face tree-sitter-hl-face:string fontified t)) . -100) (undo-tree-id42 . -2) (undo-tree-id43 . -2) 102 (100 . 102) (99 . 101) (#("\"" 0 1 (fontified nil)) . -99) (93 . 100) (85 . 92) (82 . 86) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 83 (77 . 83) (#("i" 0 1 (fontified t)) . -77) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("m" 0 1 (fontified t)) . -78) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("p" 0 1 (fontified t)) . -79) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("o" 0 1 (fontified t)) . -80) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("r" 0 1 (fontified t)) . -81) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("t" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -82) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id58 . -1) 84 (77 . 84) (76 . 77) (68 . 75) (#("op" 0 2 (face tree-sitter-hl-face:string fontified t)) . -68) (undo-tree-id59 . -2) (undo-tree-id60 . -2) 70 (68 . 70) (67 . 69) (#("\"" 0 1 (fontified nil)) . -67) (61 . 68) (54 . 61) (#("op" 0 2 (fontified t)) . -54) (undo-tree-id61 . -2) (undo-tree-id62 . -2) 56 (47 . 56) (46 . 47) (34 . 45) (#("P" 0 1 (face tree-sitter-hl-face:string fontified t)) . -34) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 35 (32 . 35) (#("/" 0 1 (face tree-sitter-hl-face:string fontified t)) . -32) (undo-tree-id65 . -1) 33 (32 . 33) (26 . 32) (#("w" 0 1 (face tree-sitter-hl-face:string fontified t)) . -26) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 27 (26 . 27) (#("W" 0 1 (face tree-sitter-hl-face:string fontified t)) . -26) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 27 (26 . 27) (25 . 27) (#("\"" 0 1 (fontified nil)) . -25) (25 . 26) (21 . 25) (#("o" 0 1 (fontified t)) . -21) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("r" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -22) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("m" 0 1 (fontified t)) . -23) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 24 (4 . 24) (#("r" 0 1 (fontified t)) . -4) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("o" 0 1 (fontified t)) . -5) (undo-tree-id78 . -1) (#("t" 0 1 (fontified t)) . -6) (undo-tree-id79 . -1) (#(" " 0 1 (fontified t)) . -7) (undo-tree-id80 . -1) 8 (1 . 8) (t . -1)) nil (26416 15614 282426 454000) 0 nil])
([nil current ((290 . 291) 204) nil (26416 15614 282351 426000) 0 nil])
nil
