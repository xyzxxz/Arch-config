(undo-tree-save-format-version . 1)
"f6d5c095bc5728d369b7ec2c4f0d727e0b6af8e8"
[nil nil nil nil (26414 49173 344532 964000) 0 nil]
([nil nil ((67 . 74) (#("op" 0 2 (face tree-sitter-hl-face:string fontified t)) . -67) (undo-tree-id68 . -2) (undo-tree-id69 . -2) 69 (67 . 69) (66 . 68) (#("\"" 0 1 (fontified nil)) . -66) (62 . 67) (59 . 62) (53 . 59) (#("opt" 0 3 (fontified t)) . -53) (undo-tree-id70 . -3) (undo-tree-id71 . -3) 56 (52 . 56) (46 . 52) (#("im" 0 2 (fontified t)) . -46) (undo-tree-id72 . -2) (undo-tree-id73 . -2) 48 (46 . 48) (46 . 47) (30 . 44) (#("P" 0 1 (face tree-sitter-hl-face:string fontified t)) . -30) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 31 (27 . 31) (26 . 28) (#("\"" 0 1 (fontified nil)) . -26) (26 . 27) (#("'" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -26) (undo-tree-id76 . -1) (#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . 27) (26 . 28) (#("'" 0 1 (fontified nil)) . -26) (20 . 27) (9 . 20) (#("PanelBu" 0 7 (face tree-sitter-hl-face:constructor fontified t)) . -9) (undo-tree-id77 . -7) (undo-tree-id78 . -7) 16 (14 . 16) (#("b" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -14) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("u" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -15) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("t" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -16) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("t" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -17) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -18) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -19) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 20 (9 . 20) (#("Pa" 0 2 (face tree-sitter-hl-face:constructor fontified t)) . -9) (undo-tree-id91 . -2) (undo-tree-id92 . -2) 11 (2 . 11) (1 . 2) (38 . 42) (37 . 39) (36 . 38) (24 . 37) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -24) (undo-tree-id93 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 25) (20 . 26) (#(")" 0 1 (fontified nil)) . -19) (19 . 20) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -19) (19 . 20) (17 . 20) (10 . 17) (#("defa" 0 4 (fontified t)) . -10) (undo-tree-id94 . -4) (undo-tree-id95 . -4) 14 (3 . 14) (1 . 3) (t 26414 48799 478114 672000)) nil (26414 49173 344528 325000) 0 nil])
([nil nil ((311 . 313) (#("\"" 0 1 (fontified nil)) . -311) (311 . 312) (307 . 311) (305 . 306) (303 . 306) (#("y" 0 1 (face tree-sitter-hl-face:property fontified t)) . -303) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 304 (292 . 304) (287 . 291) (284 . 288) (277 . 283) (#("for" 0 3 (fontified t)) . -277) (undo-tree-id2 . -3) (undo-tree-id3 . -3) 280 (270 . 280) (269 . 271) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -269) (undo-tree-id4 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-6-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 270) (269 . 271) (256 . 270) (#("c" 0 1 (fontified t)) . -256) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("l" 0 1 (fontified t)) . -257) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("o" 0 1 (fontified t)) . -258) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("c" 0 1 (fontified t)) . -259) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("k" 0 1 (fontified t)) . -260) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("." 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t)) . -261) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("b" 0 1 (face tree-sitter-hl-face:property fontified t)) . -262) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -263) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -264) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -265) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -266) (undo-tree-id25 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -267) (undo-tree-id26 . -1) 268 (#(")" 0 1 (fontified nil)) . -267) (267 . 268) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -267) (267 . 268) (261 . 268) (256 . 261) (#("cl" 0 2 (fontified t)) . -256) (undo-tree-id27 . -2) (undo-tree-id28 . -2) 258 (256 . 258) (29 . 38) (#("var" 0 3 (face tree-sitter-hl-face:string fontified t)) . -29) (undo-tree-id29 . -3) (undo-tree-id30 . -3) 32 (24 . 32) (23 . 25) (#("\"" 0 1 (fontified nil)) . -23) (23 . 24) (17 . 23) (9 . 16) (8 . 10) (#(" " 0 1 (fontified t)) . -8) (undo-tree-id31 . -1) 9 (#("{" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -9) (undo-tree-id32 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 10) (6 . 11) (#(" " 0 1 (fontified t)) . -6) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("t" 0 1 (fontified t)) . -7) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 8 (3 . 8) (#("r" 0 1 (fontified t)) . -3) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("p" 0 1 (fontified t)) . -4) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t)) . -5) (undo-tree-id40 . -1) (#("t" 0 1 (fontified t)) . -6) (undo-tree-id41 . -1) 7 (1 . 7) (#("\"" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -218) (undo-tree-id42 . -1) (#("\"" 0 1 (face tree-sitter-hl-face:string fontified t)) . 219) (218 . 220) (#("\"" 0 1 (fontified nil)) . -218) (216 . 219) (211 . 216) (#("la" 0 2 (face tree-sitter-hl-face:property.definition fontified t)) . -211) (undo-tree-id43 . -2) (undo-tree-id44 . -2) 213 (211 . 213) (209 . 211) (208 . 209) (201 . 207) (200 . 202) (#("\"" 0 1 (fontified nil)) . -200) (190 . 201) (185 . 190) (184 . 185) (183 . 189) (182 . 184) (175 . 183) (169 . 175) (#("Wid" 0 3 (face tree-sitter-hl-face:constructor fontified t)) . -169) (undo-tree-id45 . -3) (undo-tree-id46 . -3) 172 (169 . 172) (162 . 169) (112 . 116) (114 . 117) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -114) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -115) (undo-tree-id49 . -1) (#("k" 0 1 (face tree-sitter-hl-face:property fontified t)) . -116) (undo-tree-id50 . -1) 117 (111 . 117) (104 . 111) (#("op" 0 2 (fontified t)) . -104) (undo-tree-id51 . -2) (undo-tree-id52 . -2) 106 (102 . 106) (#(" " 0 1 (fontified t)) . -102) (undo-tree-id53 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -103) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -104) (undo-tree-id55 . -1) 105 (104 . 105) (102 . 104) (#("f" 0 1 (fontified t)) . -102) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t)) . -103) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("o" 0 1 (fontified t)) . -104) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 105 (101 . 105) (91 . 100) (#(" " 0 1 (fontified t)) . -91) (undo-tree-id62 . -1) 92 (90 . 92) (#("y" 0 1 (fontified t)) . -90) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -91) (undo-tree-id65 . -1) 92 (89 . 92) (#(" " 0 1 (fontified t)) . -89) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 90 (84 . 90) (77 . 85) (76 . 77) (75 . 76) 73) nil (26414 49173 344502 617000) 0 nil])
([nil nil ((324 . 325) 313) nil (26414 49173 344447 318000) 0 nil])
([nil current ((#(")" 0 1 (fontified nil)) . -320) (320 . 321) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -320) (320 . 321) (314 . 321) (t 26414 49173 345132 927000)) nil (26414 49470 156581 806000) 0 nil])
nil
