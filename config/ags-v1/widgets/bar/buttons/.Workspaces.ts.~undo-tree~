(undo-tree-save-format-version . 1)
"e320f974e51acb3dccac706f0a70f948119606c9"
[nil nil nil nil (26414 49449 347449 521000) 0 nil]
([nil nil ((25 . 29) (24 . 26) (19 . 25) (#(")" 0 1 (fontified nil)) . -18) (18 . 19) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -18) (18 . 19) (16 . 19) (9 . 16) (#("def" 0 3 (fontified t)) . -9) (undo-tree-id0 . -3) (undo-tree-id1 . -3) 12 (8 . 12) (2 . 8) (#("expo" 0 4 (fontified t)) . -2) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 6 (2 . 6) (1 . 2) (t . -1)) nil (26414 49449 347445 954000) 0 nil])
([nil nil ((31 . 32) 28) nil (26414 49449 347413 639000) 0 nil])
([nil nil ((132 . 136) (131 . 133) (130 . 132) (129 . 131) (118 . 129) (#("PanelBu" 0 7 (face tree-sitter-hl-face:constructor fontified t)) . -118) (undo-tree-id0 . -7) (undo-tree-id1 . -7) 125 (122 . 125) (118 . 122) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -118) (undo-tree-id2 . -1) (#("
" 0 1 (fontified t)) . -119) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -120) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -121) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -122) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -123) (undo-tree-id7 . -1) (#("
" 0 1 (fontified t)) . -124) (undo-tree-id8 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -125) (undo-tree-id9 . -1) 126 (85 . 93) (#("hy" 0 2 (face tree-sitter-hl-face:string fontified t)) . -85) (undo-tree-id10 . -2) (undo-tree-id11 . -2) 87 (85 . 87) (84 . 86) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . -84) (84 . 85) (83 . 85) (77 . 83) (#("im" 0 2 (face tree-sitter-hl-face:property fontified t)) . -77) (undo-tree-id12 . -2) (undo-tree-id13 . -2) 79 (76 . 79) (69 . 76) (#("Ser" 0 3 (face tree-sitter-hl-face:constructor fontified t)) . -69) (undo-tree-id14 . -3) (undo-tree-id15 . -3) 72 (69 . 72) (68 . 69) (63 . 68) (#("aw" 0 2 (fontified t)) . -63) (undo-tree-id16 . -2) (undo-tree-id17 . -2) 65 (61 . 65) (#("f" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -61) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -62) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -63) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 64 (60 . 64) (52 . 60) (#("hy" 0 2 (face tree-sitter-hl-face:variable fontified t)) . -52) (undo-tree-id24 . -2) (undo-tree-id25 . -2) 54 (52 . 54) (#("h" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -52) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 53 (46 . 53) (30 . 44) (27 . 30) (26 . 28) (#("\"" 0 1 (fontified nil)) . -26) (20 . 27) (9 . 20) (#("PanelB" 0 6 (face tree-sitter-hl-face:constructor fontified t)) . -9) (undo-tree-id28 . -6) (undo-tree-id29 . -6) 15 (2 . 15) (1 . 2) (1 . 3) (t 26414 49449 351146 404000)) nil (26414 50459 919539 568000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1287 . 1288) (nil fontified nil 96 . 1288) (96 . 1288) (t 26414 50459 920195 748000)) nil (26414 50562 504819 58000) 0 nil])
([nil nil ((#("
export default () => PanelButton({
    
})
" 0 1 (fontified t) 1 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 17 18 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 18 19 (fontified t) 19 21 (face tree-sitter-hl-face:operator fontified t) 21 22 (fontified t) 22 33 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 33 34 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 34 35 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 35 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 42 43 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 43 44 (fontified t)) . 1288) (undo-tree-id43 . 4) (undo-tree-id44 . -39) (undo-tree-id45 . -39) (undo-tree-id46 . -39) (undo-tree-id47 . -39) (undo-tree-id48 . -43)) nil (26414 50562 504817 392000) 0 nil])
([nil nil ((#("    window: \"overview\",
" 0 4 (fontified t) 4 10 (face tree-sitter-hl-face:property.definition fontified t) 10 12 (fontified t) 12 22 (face tree-sitter-hl-face:string fontified t) 22 23 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 23 24 (fontified t)) . 1050) (undo-tree-id42 . -23)) nil (26414 50562 504811 868000) 0 nil])
([nil nil ((#("const hyprland = await Service.import(\"hyprland\")
" 0 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 22 (face tree-sitter-hl-face:keyword fontified t) 22 23 (fontified t) 23 30 (face tree-sitter-hl-face:constructor fontified t) 30 31 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 38 39 (face tree-sitter-hl-face:string fontified t) 39 47 (face tree-sitter-hl-face:string fontified t) 47 48 (face tree-sitter-hl-face:string fontified t) 48 49 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 49 50 (fontified t)) . 46) (undo-tree-id30 . -37) (undo-tree-id31 . -50) (undo-tree-id32 . -49) (undo-tree-id33 . -50) (undo-tree-id34 . -37) (undo-tree-id35 . 12) (undo-tree-id36 . -37) (undo-tree-id37 . -37) (undo-tree-id38 . -37) (undo-tree-id39 . -37) (undo-tree-id40 . -37) (undo-tree-id41 . -37) 83) nil (26414 50562 504809 284000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (26414 50562 504792 711000) 0 nil])
([nil nil ((377 . 378) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . 377)) nil (26414 50562 504787 60000) 0 nil])
([nil current ((105 . 106) (t 26414 50562 506200 757000)) nil (26414 50590 942190 212000) 0 nil])
nil
